<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="5" total="7" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="Trigonometry suite" duration-ms="3" started-at="2016-08-02T13:12:53Z" finished-at="2016-08-02T13:12:53Z">
    <groups>
    </groups>
    <test name="Test trigonometrical functions" duration-ms="3" started-at="2016-08-02T13:12:53Z" finished-at="2016-08-02T13:12:53Z">
      <class name="com.epam.module3.TrigonometryTest">
        <test-method status="PASS" signature="prepare()[pri:0, instance:com.epam.module3.TrigonometryTest@621be5d1]" name="prepare" is-config="true" duration-ms="1" started-at="2016-08-02T19:12:53Z" finished-at="2016-08-02T19:12:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prepare -->
        <test-method status="PASS" signature="config()[pri:0, instance:com.epam.module3.TrigonometryTest@621be5d1]" name="config" is-config="true" duration-ms="0" started-at="2016-08-02T19:12:53Z" finished-at="2016-08-02T19:12:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- config -->
        <test-method status="FAIL" signature="cosPIDiv2()[pri:0, instance:com.epam.module3.TrigonometryTest@621be5d1]" name="cosPIDiv2" duration-ms="0" started-at="2016-08-02T19:12:53Z" finished-at="2016-08-02T19:12:53Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Incorrect cosine operation: expected [0.0] but found [1.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Incorrect cosine operation: expected [0.0] but found [1.0]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at com.epam.module3.TrigonometryTest.cosPIDiv2(TrigonometryTest.java:36)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cosPIDiv2 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.epam.module3.TrigonometryTest@621be5d1]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2016-08-02T19:12:53Z" finished-at="2016-08-02T19:12:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="sinPIDiv2()[pri:0, instance:com.epam.module3.TrigonometryTest@621be5d1]" name="sinPIDiv2" duration-ms="0" started-at="2016-08-02T19:12:53Z" finished-at="2016-08-02T19:12:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sinPIDiv2 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.epam.module3.TrigonometryTest@621be5d1]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2016-08-02T19:12:53Z" finished-at="2016-08-02T19:12:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="done()[pri:0, instance:com.epam.module3.TrigonometryTest@621be5d1]" name="done" is-config="true" duration-ms="1" started-at="2016-08-02T19:12:53Z" finished-at="2016-08-02T19:12:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="FAIL" signature="tgPI()[pri:0, instance:com.epam.module3.TrigonometryTest@621be5d1]" name="tgPI" duration-ms="0" started-at="2016-08-02T19:12:53Z" finished-at="2016-08-02T19:12:53Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Incorrect tangent operation: expected [0.0] but found [1.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Incorrect tangent operation: expected [0.0] but found [1.0]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at com.epam.module3.TrigonometryTest.tgPI(TrigonometryTest.java:42)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tgPI -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.epam.module3.TrigonometryTest@621be5d1]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2016-08-02T19:12:53Z" finished-at="2016-08-02T19:12:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="finish()[pri:0, instance:com.epam.module3.TrigonometryTest@621be5d1]" name="finish" is-config="true" duration-ms="0" started-at="2016-08-02T19:12:53Z" finished-at="2016-08-02T19:12:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- finish -->
      </class> <!-- com.epam.module3.TrigonometryTest -->
    </test> <!-- Test trigonometrical functions -->
  </suite> <!-- Trigonometry suite -->
  <suite name="Parallel" duration-ms="25" started-at="2016-08-02T13:12:53Z" finished-at="2016-08-02T13:12:53Z">
    <groups>
      <group name="Negative">
        <method signature="TrigonometryTest.ctgPI()[pri:0, instance:com.epam.module3.TrigonometryTest@2d38eb89]" name="ctgPI" class="com.epam.module3.TrigonometryTest"/>
      </group> <!-- Negative -->
    </groups>
    <test name="Parallel trigonometry test" duration-ms="25" started-at="2016-08-02T13:12:53Z" finished-at="2016-08-02T13:12:53Z">
      <class name="com.epam.module3.TrigonometryTest">
        <test-method status="PASS" signature="prepare()[pri:0, instance:com.epam.module3.TrigonometryTest@2d38eb89]" name="prepare" is-config="true" duration-ms="8" started-at="2016-08-02T19:12:53Z" finished-at="2016-08-02T19:12:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prepare -->
        <test-method status="PASS" signature="config()[pri:0, instance:com.epam.module3.TrigonometryTest@2d38eb89]" name="config" is-config="true" duration-ms="1" started-at="2016-08-02T19:12:53Z" finished-at="2016-08-02T19:12:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- config -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.epam.module3.TrigonometryTest@2d38eb89]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2016-08-02T19:12:53Z" finished-at="2016-08-02T19:12:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.epam.module3.TrigonometryTest@2d38eb89]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2016-08-02T19:12:53Z" finished-at="2016-08-02T19:12:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="cosPIDiv2()[pri:0, instance:com.epam.module3.TrigonometryTest@2d38eb89]" name="cosPIDiv2" duration-ms="2" started-at="2016-08-02T19:12:53Z" finished-at="2016-08-02T19:12:53Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Incorrect cosine operation: expected [0.0] but found [1.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Incorrect cosine operation: expected [0.0] but found [1.0]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at com.epam.module3.TrigonometryTest.cosPIDiv2(TrigonometryTest.java:36)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cosPIDiv2 -->
        <test-method status="FAIL" signature="ctgPI()[pri:0, instance:com.epam.module3.TrigonometryTest@2d38eb89]" name="ctgPI" duration-ms="2" started-at="2016-08-02T19:12:53Z" finished-at="2016-08-02T19:12:53Z">
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Expected exception java.lang.NumberFormatException but got org.testng.TestException: 
Expected exception java.lang.NumberFormatException but got java.lang.AssertionError: Incorrect cotangent operation: expected [0.0] but found [0.99627207622075]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Expected exception java.lang.NumberFormatException but got org.testng.TestException: 
Expected exception java.lang.NumberFormatException but got java.lang.AssertionError: Incorrect cotangent operation: expected [0.0] but found [0.99627207622075]
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1497)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1245)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.testng.TestException: 
Expected exception java.lang.NumberFormatException but got java.lang.AssertionError: Incorrect cotangent operation: expected [0.0] but found [0.99627207622075]
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1497)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:754)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	... 5 more
Caused by: java.lang.AssertionError: Incorrect cotangent operation: expected [0.0] but found [0.99627207622075]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at com.epam.module3.TrigonometryTest.ctgPI(TrigonometryTest.java:48)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	... 7 more
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ctgPI -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.epam.module3.TrigonometryTest@2d38eb89]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2016-08-02T19:12:53Z" finished-at="2016-08-02T19:12:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="sinPIDiv2()[pri:0, instance:com.epam.module3.TrigonometryTest@2d38eb89]" name="sinPIDiv2" duration-ms="0" started-at="2016-08-02T19:12:53Z" finished-at="2016-08-02T19:12:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sinPIDiv2 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.epam.module3.TrigonometryTest@2d38eb89]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2016-08-02T19:12:53Z" finished-at="2016-08-02T19:12:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="tgPI()[pri:0, instance:com.epam.module3.TrigonometryTest@2d38eb89]" name="tgPI" duration-ms="0" started-at="2016-08-02T19:12:53Z" finished-at="2016-08-02T19:12:53Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Incorrect tangent operation: expected [0.0] but found [1.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Incorrect tangent operation: expected [0.0] but found [1.0]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at com.epam.module3.TrigonometryTest.tgPI(TrigonometryTest.java:42)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tgPI -->
        <test-method status="PASS" signature="done()[pri:0, instance:com.epam.module3.TrigonometryTest@2d38eb89]" name="done" is-config="true" duration-ms="0" started-at="2016-08-02T19:12:53Z" finished-at="2016-08-02T19:12:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- done -->
        <test-method status="PASS" signature="finish()[pri:0, instance:com.epam.module3.TrigonometryTest@2d38eb89]" name="finish" is-config="true" duration-ms="1" started-at="2016-08-02T19:12:53Z" finished-at="2016-08-02T19:12:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- finish -->
      </class> <!-- com.epam.module3.TrigonometryTest -->
    </test> <!-- Parallel trigonometry test -->
  </suite> <!-- Parallel -->
  <suite name="MySuite" duration-ms="0" started-at="2016-08-02T13:12:53Z" finished-at="2016-08-02T13:12:53Z">
    <groups>
    </groups>
  </suite> <!-- MySuite -->
</testng-results>
